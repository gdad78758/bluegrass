# GitHub Pages deployment workflow
name: Deploy to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["butler-gh-pages"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # Install chordpro and genpdf-butler
          sudo apt-get update
          sudo apt-get install -y chordpro
          pipx install genpdf-butler
          
      - name: Build package
        run: |
          cd genpdf_package
          python -m build
          
      - name: Generate PDFs from .chopro files
        run: |
          # Find and process .chopro files that need PDF updates
          find . -name "*.chopro" -type f | while read -r file; do
            # Get the corresponding PDF filename
            pdf_file="${file%.chopro}.pdf"
            
            # Check if PDF doesn't exist or .chopro is newer than PDF
            if [ ! -f "$pdf_file" ] || [ "$file" -nt "$pdf_file" ]; then
              echo "Generating PDF for: $file (PDF missing or outdated)"
              genpdf --pagesize a5 "$file"
            else
              echo "Skipping $file (PDF up to date)"
            fi
          done
          
      - name: Generate HTML files
        run: |
          python3 scripts/GenList.py --no-intro notes/set_list GeneratedNotesList.html
          python3 scripts/GenList.py --no-intro music GeneratedSongsList.html
          python3 scripts/GenList.py --no-intro Christmas Christmas.html
          python3 ./scripts/GenList.py --no-intro 'Katy Lesson' KatyLessons.html
          
      - name: Generate documentation
        run: |
          mkdir -p docs
          # Copy generated HTML and PDF files to docs directory for publishing
          cp *.html docs/ 2>/dev/null || true
          cp *.pdf docs/ 2>/dev/null || true
          echo "# GenPDF Butler Documentation" > docs/index.md
          echo "" >> docs/index.md
          echo "## About" >> docs/index.md
          echo "GenPDF Butler is a package for running chordpro CLI over a folder to generate PDFs from chord charts." >> docs/index.md
          echo "" >> docs/index.md
          echo "## Installation" >> docs/index.md
          echo "\`\`\`bash" >> docs/index.md
          echo "pip install genpdf-butler" >> docs/index.md
          echo "\`\`\`" >> docs/index.md
          echo "" >> docs/index.md
          echo "## Usage" >> docs/index.md
          echo "\`\`\`python" >> docs/index.md
          echo "from genpdf_butler.GenPDF import createPDFs" >> docs/index.md
          echo "" >> docs/index.md
          echo "# Generate PDFs from .chopro files" >> docs/index.md
          echo "createPDFs('/path/to/music', 'a4', 'all')" >> docs/index.md
          echo "\`\`\`" >> docs/index.md
          
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./docs
          destination: ./_site
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
